name: lockpick

on:
  pull_request:
    paths:
      - '.github/workflows/lockpick.yaml'
      - 'lib/**'
      - 'test/**'
      - 'pubspec.yaml'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: dart:3.0.5

    steps:
      - uses: actions/checkout@v3.5.3

      - name: Install Dependencies
        run: dart pub get

      - name: Format
        run: dart format --set-exit-if-changed lib test

      - name: Analyze
        run: dart analyze --fatal-infos --fatal-warnings .

      - name: Run tests
        run: dart test --chain-stack-traces --coverage=coverage && dart run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --report-on=lib

      # - name: Check Code Coverage
      #   uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
      #   with:
      #     path: coverage/lcov.info
      #     exclude: '**/*.g.dart **/*.gen.dart'

  pana:
    runs-on: ubuntu-latest
    container:
      image: dart:3.0.5

    steps:
      - uses: actions/checkout@v3.5.3

      - name: Install Dependencies
        run: |
          dart pub get
          dart pub global activate pana 0.21.34

      - name: Verify Pub Score
        run: |
          PANA=$(dart pub global run pana . --no-warning); PANA_SCORE=$(echo $PANA | sed -n "s/.*Points: \([0-9]*\)\/\([0-9]*\)./\1\/\2/p")
          echo "score: $PANA_SCORE"
          IFS='/'; read -a SCORE_ARR <<< "$PANA_SCORE"; SCORE=SCORE_ARR[0]; TOTAL=SCORE_ARR[1]
          if (( $SCORE < $TOTAL )); then echo "minimum score not met!"; exit 1; fi
